:root {
    /* Raw color values */
    --color-pink: #b936ae;
    --color-red: crimson;
    --color-deep-red: #bb3531;
    --color-dark-red: #d10700;
    --color-tutorial-red: #cc6969;
    --color-orange: chocolate;
    --color-yellow: gold;
    --color-green: #4CAF50;
    --color-cyan: cyan;
    --color-aqua: aquamarine;
    --color-teal: #00A395;
    --color-blue: #2196F3;
    --color-purple: mediumslateblue;
    
    --color-white: white;
    --color-silver: silver;
    --color-gray-light: #ccc;
    --color-gray-medium: gray;
    --color-gray-dark: dimgray;
    --color-bg-light: #555;
    --color-bg-medium: #333;
    --color-bg-dark: #202020;
    --color-black: black;
    
    /* -- General UI -- */
    --theme-bg: var(--color-bg-dark);
    --theme-surface: var(--color-bg-medium); /* cards, menus, grid-cells */
    --theme-text-primary: var(--color-white);
    --theme-text-secondary: var(--color-gray-light);
    --theme-text-tertiary: var(--color-gray-dark);
    --theme-border: var(--color-black);
    --theme-accent: var(--color-teal);

    /* -- Game Elements -- */
    --tile-color-red: var(--color-red);
    --tile-color-blue: var(--color-aqua);
    --tile-color-yellow: var(--color-yellow);
    --tile-color-purple: var(--color-purple);
    --tile-color-white: var(--color-white);
    --tile-color-future: var(--color-gray-medium);
    --tile-color-wall: var(--color-gray-dark);
    --selected-outline-color: var(--color-white);
    
    /* -- Buttons -- */
    --button-bg: var(--color-bg-light);
    --button-bg-play: var(--theme-accent);
    --button-bg-endless: var(--color-green);
    --button-bg-hardcore: var(--color-deep-red);
    --button-bg-findlast: var(--color-blue);
    --button-bg-custom: var(--color-pink);
    --button-bg-tutorial: var(--color-tutorial-red);

    /* -- Status -- */
    --status-mistake: var(--color-dark-red);
    --status-timer-countdown: var(--color-dark-red);
    --status-timer-global: var(--color-cyan);
    --status-new-record: var(--color-yellow);

    /* -- Medals -- */
    --medal-color-author: var(--color-red);
    --medal-color-gold: var(--color-yellow);
    --medal-color-silver: var(--color-silver);
    --medal-color-bronze: var(--color-orange);

    /* Layout / Animation */
    --font-size: 1.1rem;
    --animation-speed: 400ms;
    --menu-speed: 200ms;
}


body {
    background-color: var(--theme-bg);
    color: var(--theme-text-primary);
    font-size: var(--font-size);
    user-select: none;
    -webkit-user-select: none;
    -webkit-tap-highlight-color: transparent;
    box-sizing: border-box;
    touch-action: none;
    outline: none;
    margin: 0;
    height: 100svh;
    
    font-family: 'Poppins', sans-serif;

    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-bottom: calc(10px + env(safe-area-inset-bottom));
    padding-top: calc(10px + env(safe-area-inset-top));

    /* Grid Background */
    background-image:
        linear-gradient(rgba(255, 255, 255, 0.07) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255, 255, 255, 0.07) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: animated-grid 10s linear infinite;
}



@keyframes animated-grid {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
}


body.menu-active #game-wrapper {
    display: none;
}












button {
    display: block;
    border: none;
    cursor: pointer;
    padding: 12px 27px;
    border-radius: 12px;
    font-size: var(--font-size);
    color: var(--theme-text-primary);
    background: var(--button-bg);

    --button-shadow-color: color-mix(in oklab, var(--button-bg) 80%, black 30%);
    --button-depth: 6px;

    transition:
      background 200ms cubic-bezier(.3, .7, .4, 1),
      box-shadow 200ms cubic-bezier(.3, .7, .4, 1),
      transform 200ms cubic-bezier(.3, .7, .4, 1);
    transform: translateY(calc(-1 * var(--button-depth)));  /* initial */
    box-shadow: 0 var(--button-depth) 0 var(--button-shadow-color); 
}
button:hover {
    transform: translateY(calc(-1.3 * var(--button-depth)));
    box-shadow: 0 calc(1.3 * var(--button-depth)) 0 var(--button-shadow-color);
}
button:active, button.active {
    transition: box-shadow 30ms, transform 30ms;
    transform: translateY(calc(-0.5 * var(--button-depth)));
    box-shadow: 0 calc(0.5 * var(--button-depth)) 0 var(--button-shadow-color);
}


button.big {
    padding-top: 20px;
    padding-bottom: 20px;
    font-size: 1.5rem;
    font-weight: 700;
    --button-depth: 10px;
}














button.icon {
    height: 60px;
    width: 60px;
    position: relative;
}

button.icon::before,
button.icon::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 45px;
    height: 45px;

    mask-size: contain;
    mask-repeat: no-repeat;
    mask-position: center;
}

/* shadow icon layer */
button.icon::before {
    background-color: rgba(255, 255, 255, 0.2);
    transform: translate(calc(-50% + 2px), calc(-50% + 2px));
}
/* main icon layer */
button.icon::after {
    background-color: rgba(0, 0, 0, 0.5);
}
button > .button-counter {
    position: absolute;
    bottom: -15%;
    right: -5%;

    width: 28px;
    height: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: 'Poppins', 'Arial Black', sans-serif;
    font-weight: 700;
    color: rgba(0, 0, 0, 0.5);
    text-shadow: 2px 2px rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    background: inherit;
    box-shadow: inherit;
}








#home-button::before,
#home-button::after,
#end-home-button::before,
#end-home-button::after {
    mask-image: url('../svg/home.svg');
}

#hint-button::before,
#hint-button::after {
    mask-image: url('../svg/eye.svg');
}

#end-retry-button::before,
#end-retry-button::after {
    mask-image: url('../svg/retry.svg');
}

.mode-play-button::before,
.mode-play-button::after {
    mask-image: url('../svg/play.svg');
    scale: 70%;
    transform-origin: 10% 0%;
}

.mode-play-button[data-custom-icon="timer"]::before,
.mode-play-button[data-custom-icon="timer"]::after {
    mask-image: url('../svg/timer.svg');
}

.mode-continue-button::before,
.mode-continue-button::after {
    mask-image: url('../svg/save.svg');
}














#custom-settings-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
    width: 100%;
}
.setting-item {
    background-color: var(--theme-surface);
    border-radius: 12px;
    padding: 12px;
    display: flex;
    gap: 10px;
    box-shadow: inset 0 2px 4px rgba(0,0,0,0.3);
    align-items: center;
}
.setting-item.big {
    grid-column: span 2;
}
.setting-item label {
    font-size: 1rem;
    font-weight: 600;
    color: var(--theme-text-secondary);
    text-align: left;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
}
.setting-item:has(input[type="number"], input[type="text"]) {
    flex-direction: row;
}

.setting-wrapper-div {
    width: 100%;
    text-align: left;
}


#custom-settings-grid .advanced { display: none; }
#custom-settings-grid.advanced-mode .advanced {
    display: flex;
    background: color-mix(in oklab, var(--theme-surface) 70%, var(--status-mistake) 30%);
}


.setting-item input[type="text"],
.setting-item input[type="number"] {
    font-family: 'Poppins', sans-serif;
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--theme-text-primary);
    text-align: center;
    letter-spacing: 2px;
    
    width: 100%;
    box-sizing: border-box;
    padding: 10px 15px;
    background-color: var(--theme-bg);
    border: none;
    border-radius: 12px;
    box-shadow: inset 0 4px 8px rgba(0,0,0,0.4);
    transition: all 100ms ease-out;
}

.setting-item input::placeholder {
    color: var(--theme-text-tertiary);
    letter-spacing: normal;
}
.setting-item input:focus {
    outline: none;
    box-shadow: inset 0 4px 8px rgba(0,0,0,0.4), 0 0 15px var(--theme-accent);
}
.setting-item input[type="number"] {
    appearance: textfield;
}
.setting-item input[type="number"]::-webkit-outer-spin-button,
.setting-item input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}


.setting-item:has(input[type="checkbox"]) {
    justify-content: flex-start;
}

.setting-item:has(input[type="checkbox"]) input[type="checkbox"] {
    display: none;
}

.setting-item:has(input[type="checkbox"])::before {
    content: '';
    order: -1;
    flex-shrink: 0;
    
    width: 24px;
    height: 24px;
    border-radius: 6px;
    background-color: var(--theme-bg);
    border: 2px solid var(--theme-surface);
    box-shadow: inset 0 3px 6px rgba(0,0,0,0.4);
    transition: all 100ms ease-out;
}

.setting-item:has(input[type="checkbox"])::after {
    content: '✔';
    font-size: 18px;
    font-weight: 900;
    color: var(--theme-accent);

    position: absolute;
    translate: 7px 0px;
    
    opacity: 0;
    transition: all 100ms cubic-bezier(.3, .7, .4, 1);
}

.setting-item:has(input[type="checkbox"]:checked)::before {
    border-color: var(--theme-accent);
    box-shadow: inset 0 3px 6px rgba(0,0,0,0.4), 0 0 15px var(--theme-accent);
}
.setting-item:has(input[type="checkbox"]:checked)::after {
    opacity: 1;
}




















body.menu-active #menus {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    text-align: center;
}

body:not(.menu-active) #menus {
    display: none;
}

#menus .menu {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    position: absolute;

    width: 95%;
    max-width: 400px;

    transition: opacity var(--menu-speed) ease-in-out,
                transform var(--menu-speed) ease-in-out;

    overflow: auto;
}

#menus .menu:not(.active) {
    opacity: 0;
    transform: translateY(10px);
    pointer-events: none;
}



#menus h1 {
    font-size: 5rem;
    font-weight: 700;
    margin: 0 0 30px 0;
    line-height: 1.1;

    background: linear-gradient(180deg, #ffffff 60%, #c7c7c7 100%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;

    /* A soft glow effect */
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.3);
}


#main-play-button { --button-bg: var(--theme-accent); }
.mode-card[data-mode="endless"] { --button-bg: var(--button-bg-endless); }
.mode-card[data-mode="hardcore"] { --button-bg: var(--button-bg-hardcore); }
.mode-card[data-mode="findlast"] { --button-bg: var(--button-bg-findlast); }
.mode-card[data-mode="custom"] { --button-bg: var(--button-bg-custom); }
.mode-card[data-mode="tutorial"] { --button-bg: var(--button-bg-tutorial); }
#custom-play-button { --button-bg: var(--button-bg-custom); }


.mode-buttons {
    display: flex;
    gap: 10px;
}
.mode-continue-button {
    --button-bg: var(--color-gray-dark);
    padding: 10px 15px;
}
















.mode-selection-grid {
    display: flex;
    flex-direction: column;
    gap: 15px;
    width: 100%;
    margin-bottom: 15px;
}
.mode-card {
    display: flex;
    justify-content: space-between;
    gap: 15px;
    background-color: var(--theme-surface);
    padding: 15px 20px;
    border-radius: 12px;
    box-shadow: inset 0 2px 4px rgba(0,0,0,0.3);
}



.mode-title-stats {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    text-align: left;
}
.mode-title {
    font-size: 1.2rem;
    font-weight: 700;
}
.mode-title-length {
    color: var(--theme-text-tertiary);
}
.mode-card.completed .mode-title::after {
    content: ' ✔️';
}


.mode-card[data-medal="author"] { border: 3px solid var(--medal-color-author); }
.mode-card[data-medal="gold"] { border: 2px solid var(--medal-color-gold); }
.mode-card[data-medal="silver"] { border: 2px solid var(--medal-color-silver); }
.mode-card[data-medal="bronze"] { border: 2px solid var(--medal-color-bronze); }









.best-stats {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--theme-text-secondary);
}
.best-stats:not(:empty)::before {
    content: '★';
    margin-right: 6px;
}
.best-stats > :not(:empty):not(:last-child)::after {
    content: '·';
    font-weight: 900;
    margin: 5px;
}







#mode-tabs {
    display: flex;
    justify-content: center;
    gap: 10px;
}
.mode-tab-button {
    padding: 10px 12px;
    font-size: 1rem;
    font-weight: 600;
}
.mode-tab-button.active {
    --button-bg: var(--theme-accent);
}



#daily-resets-in-display {
    color: var(--theme-text-secondary);
    font-weight: 600;
}